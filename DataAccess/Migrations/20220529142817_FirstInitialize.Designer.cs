// <auto-generated />
using System;
using DataAccess.Concrete.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20220529142817_FirstInitialize")]
    partial class FirstInitialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Concrete.OperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Core.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Core.Entities.Concrete.UserOperationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OperationClaimId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("Entities.Concrete.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<string>("PublishingHouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("WriterFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookName = "1984",
                            CategoryName = "Bilim-Kurgu, Distopik-Kurgu",
                            NumberOfPages = 352,
                            PublishingHouse = "MK Publications",
                            Status = true,
                            WriterFullName = "George Orwell"
                        },
                        new
                        {
                            BookId = 2,
                            BookName = "Varolmanın Dayanılmaz Hafifliği",
                            CategoryName = "Roman",
                            NumberOfPages = 320,
                            PublishingHouse = "HarperCollins Publishers",
                            Status = true,
                            WriterFullName = "Milan Kundera"
                        },
                        new
                        {
                            BookId = 3,
                            BookName = "Hayvan Çiftliği",
                            CategoryName = "Distopik Kurgu",
                            NumberOfPages = 112,
                            PublishingHouse = "Secker & Warburg",
                            Status = true,
                            WriterFullName = "George Orwell"
                        },
                        new
                        {
                            BookId = 4,
                            BookName = "Martı Jonathan Livingston",
                            CategoryName = "Kişisel Gelişim",
                            NumberOfPages = 96,
                            PublishingHouse = "Harpercollins",
                            Status = true,
                            WriterFullName = "Richard Bach"
                        },
                        new
                        {
                            BookId = 5,
                            BookName = "Anne Frank'ın Hatıra Defteri",
                            CategoryName = "Otobiyografi",
                            NumberOfPages = 356,
                            PublishingHouse = "Puffin",
                            Status = true,
                            WriterFullName = "Anne Frank"
                        },
                        new
                        {
                            BookId = 6,
                            BookName = "Fahrenheit 451",
                            CategoryName = "Bilim-Kurgu",
                            NumberOfPages = 192,
                            PublishingHouse = "HarperCollins",
                            Status = true,
                            WriterFullName = "Ray Bradbury"
                        },
                        new
                        {
                            BookId = 7,
                            BookName = "Kürk Mantolu Madonna",
                            CategoryName = "Roman",
                            NumberOfPages = 160,
                            PublishingHouse = "Penguin Classics",
                            Status = true,
                            WriterFullName = "Sabahattin Ali"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
